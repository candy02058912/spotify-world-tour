{"version":3,"sources":["Context/UserContext.js","Components/Nav/NavBar.js","Views/Profile/Profile.js","Views/Home/Home.js","Context/BrowseContext.js","Components/Map/MapStyles.js","Components/Map/Map.js","Components/SpotifyWidget/SpotifyWidget.js","Components/MusicShuffler/MusicShuffler.js","Components/MusicInfo/MusicInfo.js","Components/SpotifyCategories/SpotifyCategories.js","Components/SelectCountryError/SelectCountryError.js","Components/SpotifyToolbar/SpotifyToolbar.js","API/SWTApi.js","Views/Browse/Browse.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","NavBar","logout","navigate","useNavigate","spotifyLogin","window","open","user","useContext","className","to","href","profileUrl","src","photos","value","alt","displayName","onClick","Profile","bgImgStyle","top","left","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","width","height","Home","style","BrowseContext","markets","worldviewFilter","clearMapLayer","id","source","type","url","worldview","filter","paint","selectedCountryLayer","layout","visibility","hoveredCountryLayer","mapboxgl","accessToken","Map","useState","lng","setLng","lat","setLat","zoom","setZoom","mapContainer","useRef","map","setCountry","useEffect","current","container","center","on","addLayer","e","setLayoutProperty","countryCode","features","properties","iso_3166_1","countryName","name_en","code","name","setFilter","flyTo","lngLat","speed","hoveredCountry","includes","getCanvas","cursor","getCenter","toFixed","getZoom","ref","SpotifyWidget","widgetUri","allow","title","MusicShuffler","music","setMusic","size","newIdx","musicIdx","length","MusicInfo","spotifyMusic","items","artists","images","playlists","description","SpotifyCategories","categoryChunk","setCategoryChunk","categories","setCategory","category","chunkedCategories","chunks","setPlaylistCategory","target","cat","SelectCountryError","setShowCountrySelectedError","SpotifyToolbar","spotifyToolbarCategory","setSpotifyToolbarCategory","country","showCountrySelectedError","btnHTML","innerHTML","console","log","BASE_URL","process","REACT_APP_BASE_URL","axios","defaults","withCredentials","SWTApi","endpoint","data","method","params","error","response","message","Array","isArray","res","token","clientCredentialsToken","access_token","albums","categoryId","playlistId","userId","Browse","ccToken","setCategories","a","getAlbum","getFeaturedPlaylist","getPlaylistsByCategory","getCategories","getMusic","App","setUser","setAccessToken","setCCToken","getCCToken","fetch","credentials","headers","Accept","then","status","json","Error","resObject","catch","err","Provider","index","element","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.005f1893.chunk.js","sourcesContent":["import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import React, { useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserContext from \"../../Context/UserContext\";\nimport { BsGlobe } from \"react-icons/bs\";\n\nimport \"./NavBar.css\";\n\nfunction NavBar({ logout }) {\n  const navigate = useNavigate();\n  const spotifyLogin = () => {\n    window.open(\"http://localhost:3000/auth/spotify\", \"_self\");\n    // window.open(\n    //   \"https://spotify-world-tour.herokuapp.com/auth/spotify\",\n    //   \"_self\"\n    // );\n  };\n  const { user } = useContext(UserContext);\n\n  function loggedInNav() {\n    return (\n      <>\n        <li className=\"nav-item\">\n          <a href={user.profileUrl} className=\"nav-link nav-profile\">\n            <img\n              className=\"navbar-profile-img\"\n              src={user.photos[0].value}\n              alt=\"spotify profile\"\n            />\n            {user.displayName}\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"/#\"\n            onClick={() => {\n              logout();\n              navigate(\"/\");\n            }}\n            className=\"nav-link\"\n          >\n            Logout\n          </a>\n        </li>\n      </>\n    );\n  }\n\n  function loggedOutNav() {\n    return (\n      <>\n        <li className=\"nav-item\">\n          <p onClick={spotifyLogin} className=\"nav-link\">\n            Login\n          </p>\n        </li>\n      </>\n    );\n  }\n\n  return (\n    <nav className=\"nav\">\n      <Link to=\"/\" className=\"nav-link nav-logo\">\n        <div className=\"logo-container\">\n          <BsGlobe className=\"globe-icon\" />\n          Spotify World Tour\n        </div>\n      </Link>\n      <ul className=\"nav-items\">{user ? loggedInNav() : loggedOutNav()}</ul>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nfunction Profile({ user }) {\n  return (\n    <div>\n      <h1>Profile</h1>\n      <h2>User: {user.displayName}</h2>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport \"./Home.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst bgImgStyle = {\n  top: \"0\",\n  left: \"0\",\n  backgroundImage: 'url(\"/images/concertSmall.jpg\")',\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n  backgroundPosition: \"center\",\n  width: \"100vw\",\n  height: \"calc(100vh - 60px)\",\n};\n\nfunction Home() {\n  const navigate = useNavigate();\n  const spotifyLogin = () => {\n    window.open(\"http://localhost:3000/auth/spotify\", \"_self\");\n  };\n\n  return (\n    <div className=\"home-view\" style={bgImgStyle}>\n      <div className=\"home-container\">\n        <h1 className=\"home-title\">Spotify World Tour</h1>\n        {/* <h6 className=\"home-description\">\n          Explore music from around the world! Continue by logging on to your\n          spotify account or browse music anonymously.\n        </h6> */}\n        <div className=\"home-btns\">\n          <button onClick={spotifyLogin} className=\"home-button\">\n            Continue with Spotify\n          </button>\n          <button\n            onClick={() => {\n              navigate(\"/browse\");\n            }}\n            className=\"home-button\"\n          >\n            Continue anonymously\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nconst BrowseContext = React.createContext();\n\nexport default BrowseContext;\n","const markets = [\n  \"AD\",\n  \"AE\",\n  \"AG\",\n  \"AL\",\n  \"AM\",\n  \"AO\",\n  \"AR\",\n  \"AT\",\n  \"AU\",\n  \"AZ\",\n  \"BA\",\n  \"BB\",\n  \"BD\",\n  \"BE\",\n  \"BF\",\n  \"BG\",\n  \"BH\",\n  \"BI\",\n  \"BJ\",\n  \"BN\",\n  \"BO\",\n  \"BR\",\n  \"BS\",\n  \"BT\",\n  \"BW\",\n  \"BY\",\n  \"BZ\",\n  \"CA\",\n  \"CD\",\n  \"CG\",\n  \"CH\",\n  \"CI\",\n  \"CL\",\n  \"CM\",\n  \"CO\",\n  \"CR\",\n  \"CV\",\n  \"CW\",\n  \"CY\",\n  \"CZ\",\n  \"DE\",\n  \"DJ\",\n  \"DK\",\n  \"DM\",\n  \"DO\",\n  \"DZ\",\n  \"EC\",\n  \"EE\",\n  \"EG\",\n  \"ES\",\n  \"FI\",\n  \"FJ\",\n  \"FM\",\n  \"FR\",\n  \"GA\",\n  \"GB\",\n  \"GD\",\n  \"GE\",\n  \"GH\",\n  \"GM\",\n  \"GN\",\n  \"GQ\",\n  \"GR\",\n  \"GT\",\n  \"GW\",\n  \"GY\",\n  \"HK\",\n  \"HN\",\n  \"HR\",\n  \"HT\",\n  \"HU\",\n  \"ID\",\n  \"IE\",\n  \"IL\",\n  \"IN\",\n  \"IQ\",\n  \"IS\",\n  \"IT\",\n  \"JM\",\n  \"JO\",\n  \"JP\",\n  \"KE\",\n  \"KG\",\n  \"KH\",\n  \"KI\",\n  \"KM\",\n  \"KN\",\n  \"KR\",\n  \"KW\",\n  \"KZ\",\n  \"LA\",\n  \"LB\",\n  \"LC\",\n  \"LI\",\n  \"LK\",\n  \"LR\",\n  \"LS\",\n  \"LT\",\n  \"LU\",\n  \"LV\",\n  \"LY\",\n  \"MA\",\n  \"MC\",\n  \"MD\",\n  \"ME\",\n  \"MG\",\n  \"MH\",\n  \"MK\",\n  \"ML\",\n  \"MN\",\n  \"MO\",\n  \"MR\",\n  \"MT\",\n  \"MU\",\n  \"MV\",\n  \"MW\",\n  \"MX\",\n  \"MY\",\n  \"MZ\",\n  \"NA\",\n  \"NE\",\n  \"NG\",\n  \"NI\",\n  \"NL\",\n  \"NO\",\n  \"NP\",\n  \"NR\",\n  \"NZ\",\n  \"OM\",\n  \"PA\",\n  \"PE\",\n  \"PG\",\n  \"PH\",\n  \"PK\",\n  \"PL\",\n  \"PS\",\n  \"PT\",\n  \"PW\",\n  \"PY\",\n  \"QA\",\n  \"RO\",\n  \"RS\",\n  \"RU\",\n  \"RW\",\n  \"SA\",\n  \"SB\",\n  \"SC\",\n  \"SE\",\n  \"SG\",\n  \"SI\",\n  \"SK\",\n  \"SL\",\n  \"SM\",\n  \"SN\",\n  \"SR\",\n  \"ST\",\n  \"SV\",\n  \"SZ\",\n  \"TD\",\n  \"TG\",\n  \"TH\",\n  \"TJ\",\n  \"TL\",\n  \"TN\",\n  \"TO\",\n  \"TR\",\n  \"TT\",\n  \"TV\",\n  \"TW\",\n  \"TZ\",\n  \"UA\",\n  \"UG\",\n  \"US\",\n  \"UY\",\n  \"UZ\",\n  \"VC\",\n  \"VE\",\n  \"VN\",\n  \"VU\",\n  \"WS\",\n  \"XK\",\n  \"ZA\",\n  \"ZM\",\n  \"ZW\",\n];\n\nconst marketsString = `\"AD\",\n\"AE\",\n\"AG\",\n\"AL\",\n\"AM\",\n\"AO\",\n\"AR\",\n\"AT\",\n\"AU\",\n\"AZ\",\n\"BA\",\n\"BB\",\n\"BD\",\n\"BE\",\n\"BF\",\n\"BG\",\n\"BH\",\n\"BI\",\n\"BJ\",\n\"BN\",\n\"BO\",\n\"BR\",\n\"BS\",\n\"BT\",\n\"BW\",\n\"BY\",\n\"BZ\",\n\"CA\",\n\"CD\",\n\"CG\",\n\"CH\",\n\"CI\",\n\"CL\",\n\"CM\",\n\"CO\",\n\"CR\",\n\"CV\",\n\"CW\",\n\"CY\",\n\"CZ\",\n\"DE\",\n\"DJ\",\n\"DK\",\n\"DM\",\n\"DO\",\n\"DZ\",\n\"EC\",\n\"EE\",\n\"EG\",\n\"ES\",\n\"FI\",\n\"FJ\",\n\"FM\",\n\"FR\",\n\"GA\",\n\"GB\",\n\"GD\",\n\"GE\",\n\"GH\",\n\"GM\",\n\"GN\",\n\"GQ\",\n\"GR\",\n\"GT\",\n\"GW\",\n\"GY\",\n\"HK\",\n\"HN\",\n\"HR\",\n\"HT\",\n\"HU\",\n\"ID\",\n\"IE\",\n\"IL\",\n\"IN\",\n\"IQ\",\n\"IS\",\n\"IT\",\n\"JM\",\n\"JO\",\n\"JP\",\n\"KE\",\n\"KG\",\n\"KH\",\n\"KI\",\n\"KM\",\n\"KN\",\n\"KR\",\n\"KW\",\n\"KZ\",\n\"LA\",\n\"LB\",\n\"LC\",\n\"LI\",\n\"LK\",\n\"LR\",\n\"LS\",\n\"LT\",\n\"LU\",\n\"LV\",\n\"LY\",\n\"MA\",\n\"MC\",\n\"MD\",\n\"ME\",\n\"MG\",\n\"MH\",\n\"MK\",\n\"ML\",\n\"MN\",\n\"MO\",\n\"MR\",\n\"MT\",\n\"MU\",\n\"MV\",\n\"MW\",\n\"MX\",\n\"MY\",\n\"MZ\",\n\"NA\",\n\"NE\",\n\"NG\",\n\"NI\",\n\"NL\",\n\"NO\",\n\"NP\",\n\"NR\",\n\"NZ\",\n\"OM\",\n\"PA\",\n\"PE\",\n\"PG\",\n\"PH\",\n\"PK\",\n\"PL\",\n\"PS\",\n\"PT\",\n\"PW\",\n\"PY\",\n\"QA\",\n\"RO\",\n\"RS\",\n\"RU\",\n\"RW\",\n\"SA\",\n\"SB\",\n\"SC\",\n\"SE\",\n\"SG\",\n\"SI\",\n\"SK\",\n\"SL\",\n\"SM\",\n\"SN\",\n\"SR\",\n\"ST\",\n\"SV\",\n\"SZ\",\n\"TD\",\n\"TG\",\n\"TH\",\n\"TJ\",\n\"TL\",\n\"TN\",\n\"TO\",\n\"TR\",\n\"TT\",\n\"TV\",\n\"TW\",\n\"TZ\",\n\"UA\",\n\"UG\",\n\"US\",\n\"UY\",\n\"UZ\",\n\"VC\",\n\"VE\",\n\"VN\",\n\"VU\",\n\"WS\",\n\"XK\",\n\"ZA\",\n\"ZM\",\n\"ZW\"`;\n\nconst worldviewFilter =\n  // This creates blank green map with no disputed area issues\n  [\n    \"all\",\n    [\"==\", [\"get\", \"disputed\"], \"false\"],\n    [\"match\", [\"get\", \"worldview\"], [\"all\", \"US\"], true, false],\n  ];\n\nconst marketCountryFilter = [];\n\nconst clearMapLayer = {\n  id: \"country-boundaries\",\n  source: {\n    type: \"vector\",\n    url: \"mapbox://mapbox.country-boundaries-v1\",\n    worldview: \"USA\",\n  },\n  filter: worldviewFilter,\n  \"source-layer\": \"country_boundaries\",\n  type: \"fill\",\n  paint: {\n    \"fill-outline-color\": \"#168d40\",\n    \"fill-color\": \"#ffffff\",\n    \"fill-opacity\": 0,\n  },\n};\n\nconst spotifyMarketCountries = {\n  id: \"market-countries\",\n  source: {\n    type: \"vector\",\n    url: \"mapbox://mapbox.country-boundaries-v1\",\n  },\n  filter: [\"in\", \"iso_3166_1\", \"US\"],\n  \"source-layer\": \"country_boundaries\",\n  type: \"fill\",\n  paint: {\n    \"fill-outline-color\": \"red\",\n    \"fill-color\": \"red\",\n    \"fill-opacity\": 0.3,\n  },\n};\n\nconst selectedCountryLayer = {\n  id: \"selected-country\",\n  source: {\n    type: \"vector\",\n    url: \"mapbox://mapbox.country-boundaries-v1\",\n  },\n  filter: worldviewFilter,\n  \"source-layer\": \"country_boundaries\",\n  type: \"fill\",\n  paint: {\n    \"fill-outline-color\": \"#168d40\",\n    \"fill-color\": \"#1DB954\",\n    \"fill-opacity\": 0.3,\n  },\n  layout: {\n    visibility: \"none\",\n  },\n};\nconst hoveredCountryLayer = {\n  id: \"hovered-country\",\n  source: {\n    type: \"vector\",\n    url: \"mapbox://mapbox.country-boundaries-v1\",\n  },\n  filter: worldviewFilter,\n  \"source-layer\": \"country_boundaries\",\n  type: \"fill\",\n  paint: {\n    \"fill-outline-color\": \"#168d40\",\n    \"fill-color\": \"#1DB954\",\n    \"fill-opacity\": 0.15,\n  },\n  layout: {\n    visibility: \"none\",\n  },\n};\n\nexport {\n  clearMapLayer,\n  selectedCountryLayer,\n  spotifyMarketCountries,\n  markets,\n  marketsString,\n  hoveredCountryLayer,\n};\n","import React, { useRef, useState, useEffect, useContext } from \"react\";\nimport BrowseContext from \"../../Context/BrowseContext\";\n\nimport mapboxgl from \"mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport {\n  clearMapLayer,\n  selectedCountryLayer,\n  spotifyMarketCountries,\n  hoveredCountryLayer,\n  markets,\n} from \"./MapStyles.js\";\nimport \"./Map.css\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoibnNhbmRlIiwiYSI6ImNrdWFudnphMTBpbmkybm8zOXUzYXlsZnMifQ.7d4a8ZfjVEARvZRA-spWNg\";\n\nfunction Map() {\n  const [lng, setLng] = useState(-34.5034);\n  const [lat, setLat] = useState(16.0569);\n  const [zoom, setZoom] = useState(2.27);\n\n  const mapContainer = useRef(\"\");\n  const map = useRef(null);\n\n  const { setCountry } = useContext(BrowseContext);\n\n  /** Map Initialization on component mount */\n  // adds clear layer to map\n  // updates lat, long, zoom when user moves\n  useEffect(() => {\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/light-v10\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n    // adds clear map layer\n    map.current.on(\"load\", function () {\n      // add a clear layer with country boundaries\n      map.current.addLayer(clearMapLayer, \"country-label\");\n      //\n      map.current.addLayer(selectedCountryLayer, \"country-label\");\n      //\n      map.current.addLayer(hoveredCountryLayer, \"country-label\");\n    });\n\n    // highlights clicked on countries\n    map.current.on(\"click\", \"country-boundaries\", function (e) {\n      map.current.setLayoutProperty(\n        \"selected-country\",\n        \"visibility\",\n        \"visible\"\n      );\n      let countryCode = e.features[0].properties.iso_3166_1;\n      let countryName = e.features[0].properties.name_en;\n      setCountry({\n        code: countryCode,\n        name: countryName,\n      });\n\n      map.current.setFilter(\"selected-country\", [\n        \"==\",\n        \"iso_3166_1\",\n        countryCode,\n      ]);\n\n      // map centers on click event\n      map.current.flyTo({\n        center: e.lngLat,\n        speed: 0.7,\n      });\n    });\n\n    // changes cursor when hovering over layer\n    map.current.on(\"mouseenter\", \"country-boundaries\", (e) => {\n      // console.log(e.features[0].properties.iso_3166_1);\n      let hoveredCountry = e.features[0].properties.iso_3166_1;\n      // console.log(markets.includes(hoveredCountry));\n      if (markets.includes(hoveredCountry)) {\n        // console.log(\"includes true\");\n        map.current.setFilter(\"hovered-country\", [\n          \"==\",\n          \"iso_3166_1\",\n          hoveredCountry,\n        ]);\n\n        map.current.getCanvas().style.cursor = \"pointer\";\n      }\n    });\n    // updates state (lat, long, zoom) as user scrolls around\n    map.current.on(\"move\", function () {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n    // this comment removes error message in browser\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div ref={mapContainer} className=\"map-container\"></div>;\n}\n\nexport default Map;\n","import React from \"react\";\nimport \"./SpotifyWidget.css\";\n\nconst SpotifyWidget = ({ type, id }) => {\n  const widgetUri = \"https://open.spotify.com/embed/\" + type + \"/\" + id;\n\n  return (\n    <div className=\"spotifyWidget-container\">\n      <iframe\n        className=\"spotifyWidget\"\n        src={widgetUri}\n        width=\"100%\"\n        height=\"100%\"\n        allow=\"encrypted-media\"\n        title=\"spotify widget\"\n      ></iframe>\n    </div>\n  );\n};\n\nexport default SpotifyWidget;\n","import React, { useContext } from \"react\";\nimport {\n  IoMdArrowDropleftCircle,\n  IoMdArrowDroprightCircle,\n} from \"react-icons/io\";\nimport \"../MusicShuffler/MusicShuffler.css\";\nimport BrowseContext from \"../../Context/BrowseContext\";\n\nfunction MusicShuffler() {\n  const { music, setMusic } = useContext(BrowseContext);\n\n  function incrementMusicIdx() {\n    let newIdx;\n    if (music.musicIdx === music.length - 1) {\n      newIdx = 0;\n    } else {\n      newIdx = music.musicIdx + 1;\n    }\n    setMusic({ ...music, musicIdx: newIdx });\n  }\n\n  function decrementMusicIdx() {\n    let newIdx;\n    if (music.musicIdx === 0) {\n      newIdx = music.length - 1;\n    } else {\n      newIdx = music.musicIdx - 1;\n    }\n    setMusic({ ...music, musicIdx: newIdx });\n  }\n\n  return (\n    <div className=\"musicShuffler\">\n      <IoMdArrowDropleftCircle\n        size={30}\n        className=\"arrow-btn\"\n        onClick={decrementMusicIdx}\n      />\n      <h5>More Music</h5>\n      <IoMdArrowDroprightCircle\n        size={30}\n        className=\"arrow-btn\"\n        onClick={incrementMusicIdx}\n      />\n    </div>\n  );\n}\n\nexport default MusicShuffler;\n","import React, { useContext } from \"react\";\nimport SpotifyWidget from \"../SpotifyWidget/SpotifyWidget\";\nimport \"./MusicInfo.css\";\nimport UserContext from \"../../Context/UserContext\";\nimport BrowseContext from \"../../Context/BrowseContext\";\nimport MusicShuffler from \"../MusicShuffler/MusicShuffler\";\n\nfunction MusicInfo() {\n  let type;\n  let BASE_API_TEXT;\n  let musicIdx;\n  const { music } = useContext(BrowseContext);\n\n  if (music.type === \"album\") {\n    type = \"album\";\n    BASE_API_TEXT = `music.spotifyMusic.items[0]`;\n    musicIdx = music.musicIdx;\n  } else if (music.type === \"playlist\") {\n    type = \"playlist\";\n    BASE_API_TEXT = `music.spotifyMusic.playlists.playlists.items[0]`;\n    musicIdx = music.musicIdx;\n  }\n\n  // if music type is an album (vs a playlist)\n  function albumInfo() {\n    return (\n      <>\n        <div className=\"musicInfo-info\">\n          <div className=\"musicInfo-album-artist\">\n            <div>\n              <div className=\"musicInfo-name\">\n                <p>Album</p>\n              </div>\n              <h3>{music.spotifyMusic.items[`${music.musicIdx}`].name}</h3>\n            </div>\n\n            <div>\n              <p>Artist</p>\n              <h3>\n                {music.spotifyMusic.items[`${music.musicIdx}`].artists[0].name}\n              </h3>\n            </div>\n          </div>\n          <div className=\"musicInfo-img-container\">\n            <img\n              className=\"musicInfo-img\"\n              src={music.spotifyMusic.items[`${music.musicIdx}`].images[1].url}\n              alt=\"album cover art\"\n            />\n          </div>\n        </div>\n\n        <hr />\n        <SpotifyWidget\n          id={music.spotifyMusic.items[`${music.musicIdx}`].id}\n          type=\"album\"\n        />\n        <hr />\n        <MusicShuffler />\n      </>\n    );\n  }\n\n  // Need logic to check if we get an empty list of playlists...\n  function playlistInfo() {\n    return (\n      <>\n        <div className=\"musicInfo-info\">\n          <div className=\"musicInfo-album-artist\">\n            <div>\n              <div className=\"musicInfo-name\">\n                <p>Playlist</p>\n              </div>\n              <h3>\n                {\n                  music.spotifyMusic.playlists.playlists.items[\n                    `${music.musicIdx}`\n                  ].name\n                }\n              </h3>\n            </div>\n\n            <div>\n              <p>Description</p>\n              <h5>\n                {\n                  music.spotifyMusic.playlists.playlists.items[\n                    `${music.musicIdx}`\n                  ].description\n                }\n              </h5>\n            </div>\n          </div>\n\n          <div className=\"musicInfo-img-container\">\n            <img\n              className=\"musicInfo-img\"\n              src={\n                music.spotifyMusic.playlists.playlists.items[\n                  `${music.musicIdx}`\n                ].images[0].url\n              }\n              alt=\"album cover art\"\n            />\n          </div>\n        </div>\n\n        <hr />\n        <SpotifyWidget\n          id={\n            music.spotifyMusic.playlists.playlists.items[`${music.musicIdx}`].id\n          }\n          type=\"playlist\"\n        />\n        <hr />\n        <MusicShuffler />\n      </>\n    );\n  }\n  return (\n    <div className=\"musicInfo\">\n      {type === \"album\" ? albumInfo() : playlistInfo()}\n    </div>\n  );\n}\n\nexport default MusicInfo;\n","import React, { useContext, useState } from \"react\";\nimport BrowseContext from \"../../Context/BrowseContext\";\nimport \"./SpotifyCategories.css\";\nimport { chunks } from \"chunk-array\";\nimport {\n  IoMdArrowDropleftCircle,\n  IoMdArrowDroprightCircle,\n} from \"react-icons/io\";\n\nfunction SpotifyCategories() {\n  const [categoryChunk, setCategoryChunk] = useState(0);\n  const { categories, setCategory, category } = useContext(BrowseContext);\n  let chunkedCategories = chunks(categories, 10);\n  function forwardCategory() {\n    if (categoryChunk === chunkedCategories.length - 1) {\n      setCategoryChunk(0);\n    } else {\n      setCategoryChunk(categoryChunk + 1);\n    }\n  }\n\n  function backwardCategory() {\n    if (categoryChunk === 0) {\n      setCategoryChunk(chunkedCategories.length - 1);\n    } else {\n      setCategoryChunk(categoryChunk - 1);\n    }\n  }\n\n  function setPlaylistCategory(e) {\n    setCategory(e.target.id);\n  }\n  return (\n    <div className=\"SpotifyCategories\">\n      <button className=\"spotifyCategories-btn\" onClick={backwardCategory}>\n        <IoMdArrowDropleftCircle size={30} />\n      </button>\n      <div className=\"spotifyCategory-chunks\">\n        {chunkedCategories[categoryChunk].map((cat) => (\n          <div\n            onClick={setPlaylistCategory}\n            className={\n              category === cat.id ? \" catName catName-selected\" : \"catName\"\n            }\n            key={cat.id}\n          >\n            <p id={cat.id}>{cat.name}</p>\n          </div>\n        ))}\n      </div>\n      <button className=\"spotifyCategories-btn\" onClick={forwardCategory}>\n        <IoMdArrowDroprightCircle size={30} />\n      </button>\n    </div>\n  );\n}\n\nexport default SpotifyCategories;\n","import React, { useContext } from \"react\";\nimport { AiOutlineCloseSquare } from \"react-icons/ai\";\nimport \"./SelectCountryError.css\";\nimport BrowseContext from \"../../Context/BrowseContext\";\n\nfunction SelectCountryError() {\n  const { setShowCountrySelectedError } = useContext(BrowseContext);\n  function clickToCloseErrorBox() {\n    setShowCountrySelectedError(false);\n  }\n  return (\n    <div className=\"SelectCountryError\">\n      <div className=\"SelectCountryError-container\">\n        <p className=\"SelectCountryError-text\">\n          You need to select a country before selecting the playlists by genre\n          category!\n        </p>\n        <div className=\"SelectCountryError-closeicon\">\n          <AiOutlineCloseSquare onClick={clickToCloseErrorBox} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SelectCountryError;\n","import React, { useContext, useState } from \"react\";\nimport \"./SpotifyToolbar.css\";\nimport BrowseContext from \"../../Context/BrowseContext\";\nimport SpotifyCategories from \"../SpotifyCategories/SpotifyCategories\";\nimport SelectCountryError from \"../SelectCountryError/SelectCountryError\";\nfunction SpotifyToolbar() {\n  const {\n    spotifyToolbarCategory,\n    setSpotifyToolbarCategory,\n    country,\n    showCountrySelectedError,\n    setShowCountrySelectedError,\n    category,\n    setCategory,\n  } = useContext(BrowseContext);\n\n  function clickToChangeCategory(e) {\n    let btnHTML = e.target.innerHTML;\n    if (\n      spotifyToolbarCategory === btnHTML ||\n      (\"Playlists by Genre\" === btnHTML && country.code === null)\n    ) {\n      setShowCountrySelectedError(true);\n      return;\n    } else if (\n      btnHTML === \"Playlists by Genre\" &&\n      category === null &&\n      country.code !== null\n    ) {\n      console.log(\"hello\");\n      setCategory(\"toplists\");\n      setSpotifyToolbarCategory(btnHTML);\n    } else {\n      setSpotifyToolbarCategory(btnHTML);\n\n      return;\n    }\n  }\n\n  return (\n    <div className=\"SpotifyToolbar-container\">\n      <div onClick={clickToChangeCategory} className=\"SpotifyToolbar\">\n        <div className=\"btn-container\">\n          <button\n            className={\n              spotifyToolbarCategory === \"New Releases\"\n                ? \"SpotifyToolbar-btn btn-left SpotifyToolbar-selected-btn\"\n                : \"SpotifyToolbar-btn btn-left\"\n            }\n          >\n            New Releases\n          </button>\n        </div>\n        <div className=\"btn-container\">\n          <button\n            className={\n              spotifyToolbarCategory === \"Playlists by Genre\"\n                ? \"SpotifyToolbar-btn btn-middle SpotifyToolbar-selected-btn\"\n                : \"SpotifyToolbar-btn btn-middle\"\n            }\n          >\n            Playlists by Genre\n          </button>\n        </div>\n        <div className=\"btn-container\">\n          <button\n            className={\n              spotifyToolbarCategory === \"Featured Playlists\"\n                ? \"SpotifyToolbar-btn btn-right SpotifyToolbar-selected-btn\"\n                : \"SpotifyToolbar-btn btn-right\"\n            }\n          >\n            Featured Playlists\n          </button>\n        </div>\n      </div>\n      {spotifyToolbarCategory === \"Playlists by Genre\" && <SpotifyCategories />}\n      {showCountrySelectedError && <SelectCountryError />}\n    </div>\n  );\n}\n\nexport default SpotifyToolbar;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3000\";\naxios.defaults.withCredentials = true;\n\nclass SWTApi {\n  static async request(endpoint, data = {}, method = \"get\") {\n    const url = `${BASE_URL}/${endpoint}`;\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  static async getCCToken() {\n    const url = `${BASE_URL}/auth/client-credentials`;\n    const method = \"GET\";\n    let res = await axios({ url, method });\n    const token = res.data.clientCredentialsToken.access_token;\n    return token;\n  }\n\n  static async getAlbum(accessToken, country) {\n    const url = `${BASE_URL}/music/get-album`;\n    const method = \"post\";\n    const data = {\n      country,\n      accessToken,\n    };\n    let res = await axios({ url, method, data });\n    return res.data.albums.albums;\n  }\n\n  static async getFeaturedPlaylist(accessToken, country) {\n    const url = `${BASE_URL}/music/get-featured-playlists`;\n    const method = \"POST\";\n    const data = {\n      country,\n      accessToken,\n    };\n    let res = await axios({ url, method, data });\n    console.log(\"playlists\");\n    console.log(res.data);\n    return res.data;\n  }\n\n  static async getCategories(accessToken, country) {\n    const url = `${BASE_URL}/music/get-playlist-categories`;\n    const method = \"POST\";\n    const data = {\n      accessToken,\n      country,\n    };\n    let res = await axios({ url, method, data });\n    return res.data;\n  }\n\n  static async getPlaylistsByCategory(accessToken, country, categoryId) {\n    console.log(\"API get playlists by category\");\n    const url = `${BASE_URL}/music/get-playlist-by-genre`;\n    const method = \"POST\";\n    const data = {\n      accessToken,\n      country,\n      categoryId,\n    };\n    let res = await axios({ url, method, data });\n    console.log(res.data);\n    return res.data;\n  }\n\n  static async checkIfPlaylistFollowed(accessToken, playlistId, userId) {\n    const url = `${BASE_URL}/users/followed-playlists`;\n    const method = \"POST\";\n    const data = {\n      accessToken,\n      playlistId,\n      userId,\n    };\n    let res = await axios({ url, method, data });\n    console.log(res.data);\n    return res.data;\n  }\n}\n\nexport default SWTApi;\n","import React, { useContext, useEffect } from \"react\";\nimport Map from \"../../Components/Map/Map\";\nimport MusicInfo from \"../../Components/MusicInfo/MusicInfo\";\nimport SpotifyToolbar from \"../../Components/SpotifyToolbar/SpotifyToolbar\";\nimport \"./Browse.css\";\nimport SWTApi from \"../../API/SWTApi\";\nimport UserContext from \"../../Context/UserContext\";\nimport BrowseContext from \"../../Context/BrowseContext\";\n\nfunction Browse() {\n  const { accessToken, ccToken, user } = useContext(UserContext);\n  const {\n    music,\n    setMusic,\n    spotifyToolbarCategory,\n    country,\n    setCategories,\n    category,\n  } = useContext(BrowseContext);\n\n  // updates music when country, toolbar, or genre changes\n  useEffect(() => {\n    getMusic(country.code, user);\n  }, [country, spotifyToolbarCategory, category]);\n\n  // updates genres when country changes\n  useEffect(() => {\n    // load categories\n    getCategories(country.code);\n  }, [country]);\n\n  async function getMusic(country, user) {\n    let token;\n    if (user === null) {\n      token = ccToken;\n    } else {\n      token = accessToken;\n    }\n    let spotifyMusic;\n    let type;\n    let length;\n    let musicIdx;\n    if (spotifyToolbarCategory === \"New Releases\") {\n      spotifyMusic = await SWTApi.getAlbum(token, country);\n      type = \"album\";\n      length = spotifyMusic.items.length;\n      musicIdx = 0;\n    } else if (spotifyToolbarCategory === \"Featured Playlists\") {\n      spotifyMusic = await SWTApi.getFeaturedPlaylist(token, country);\n      type = \"playlist\";\n      length = spotifyMusic.playlists.playlists.items.length;\n      musicIdx = 0;\n    } else if (spotifyToolbarCategory === \"Playlists by Genre\") {\n      spotifyMusic = await SWTApi.getPlaylistsByCategory(\n        token,\n        country,\n        category\n      );\n      type = \"playlist\";\n      length = spotifyMusic.playlists.playlists.items.length;\n      musicIdx = 0;\n    }\n    setMusic({ type, spotifyMusic, length, musicIdx });\n  }\n\n  // loadedMusic will be an array of spotifyMusic.items\n  // async function checkIfPlaylistFollowed(loadedMusic) {\n  //   // for each playlist in music, API call to check if true/false\n  //   loadedMusic.forEach((playlist) => {\n  //     const followed = await SWTApi.checkIfPlaylistFollowed(\n  //       accessToken,\n  //       playlist.id,\n  //       user.id\n  //     );\n  //     // music.spotifyMusic.playlists.playlists.items[IDX];\n  //   });\n  // then add an additional value to spotifyMusic called \"follows\" with value\n  // }\n\n  async function getCategories(country) {\n    let token;\n    if (user === null) {\n      token = ccToken;\n    } else {\n      token = accessToken;\n    }\n    let categories;\n    if (country === null) {\n      console.log(\"no country\");\n      categories = await SWTApi.getCategories(token, country);\n    } else {\n      console.log(\"yes country\");\n      categories = await SWTApi.getCategories(token, country);\n    }\n    setCategories(categories.categories.categories.items);\n  }\n\n  // When a country is not selected, sidebar has helpful info\n  function musicHelp() {\n    return (\n      <div className=\"musicHelp-container\">\n        <h3 className=\"musicHelp-text\">\n          Navigate around the map and click a country to start listening!\n        </h3>\n      </div>\n    );\n  }\n\n  // When country is selected, spotify widget and music info displayed\n  function musicInfo() {\n    return (\n      <div className=\"musicInfo\">\n        <div className=\"countryInfo\">\n          <h1 className=\"countryTitle\">{country.name}</h1>\n          <img\n            className=\"country-flag\"\n            alt={`${country.name}`}\n            src={`http://purecatamphetamine.github.io/country-flag-icons/3x2/${country.code}.svg`}\n          />\n        </div>\n        <hr className=\"musicInfo-hr\" />\n        <MusicInfo />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Browse\">\n      <div className=\"mapContainer\">\n        <SpotifyToolbar />\n        <Map />\n      </div>\n      <div className=\"musicContainer\">{music ? musicInfo() : musicHelp()}</div>\n    </div>\n  );\n}\n\nexport default Browse;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// Navbar component present throughout app/views\nimport NavBar from \"./Components/Nav/NavBar\";\n\n// Views for main pages of app\nimport Profile from \"./Views/Profile/Profile\";\nimport Home from \"./Views/Home/Home\";\nimport Browse from \"./Views/Browse/Browse\";\n\n// Context to store user/profile info\nimport UserContext from \"./Context/UserContext\";\nimport BrowseContext from \"./Context/BrowseContext\";\n\n// API caller\nimport SWTApi from \"./API/SWTApi\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [ccToken, setCCToken] = useState(null);\n  const [music, setMusic] = useState(null);\n  const [country, setCountry] = useState({ code: null, name: null });\n  const [spotifyToolbarCategory, setSpotifyToolbarCategory] =\n    useState(\"New Releases\");\n  const [categories, setCategories] = useState(null);\n  const [category, setCategory] = useState(null);\n  const [showCountrySelectedError, setShowCountrySelectedError] =\n    useState(false);\n\n  const BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3000\";\n\n  async function getCCToken() {\n    const res = await SWTApi.getCCToken();\n    setCCToken(res);\n  }\n\n  useEffect(() => {\n    const getUser = () => {\n      fetch(`${BASE_URL}/auth/login/success`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Credentials\": true,\n        },\n      })\n        .then((response) => {\n          if (response.status === 200) return response.json();\n          throw new Error(\"authentication has been failed!\");\n        })\n        .then((resObject) => {\n          setAccessToken(resObject.user.accessToken);\n          setUser(resObject.user);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    getCCToken();\n    getUser();\n  }, []);\n\n  async function logout() {\n    setUser(null);\n    setAccessToken(null);\n    await axios({\n      url: `${BASE_URL}/auth/logout`,\n      method: \"get\",\n    });\n  }\n\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={{ user, setUser, accessToken, ccToken }}>\n        <BrowseContext.Provider\n          value={{\n            spotifyToolbarCategory,\n            setSpotifyToolbarCategory,\n            country,\n            setCountry,\n            music,\n            setMusic,\n            category,\n            setCategory,\n            categories,\n            setCategories,\n            showCountrySelectedError,\n            setShowCountrySelectedError,\n          }}\n        >\n          <NavBar logout={logout} />\n          <Routes>\n            <Route index element={<Home />} />\n            <Route path=\"browse\" element={<Browse />} />\n            <Route path=\"profile\" element={<Profile user={user} />} />\n          </Routes>\n        </BrowseContext.Provider>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}